#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃コントローラ：更新：出現プロセス：アクション（敵機：ボス）
#┠─────────────────────────────────────
#┃敵機オブジェクトのアクション・メソッドでボスキャラを出現させる
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
from main.データセット              import データセット as DS
from main.オブジェクト.キャラ.敵機  import 敵機生成,ボス出現DB

#┌───────────────────────────────────
#│アクション・メソッド実行
#└───────────────────────────────────
def Pアクション_ボス():
    #┬
    #〇出現タイミングを確認する
    タイミング判定 = (DS.情報.ボスシーン == DS.仕様.シーンID.ボス登場)
    if not タイミング判定: return
    #│＼（ボスシーンが『ボス登場』以外の場合）
    #│ ↓
    #│ ▼処理を中断する
    #│
    #○ボスシーンを『ボス対戦』に進行する
    DS.情報.ボスシーン = DS.仕様.シーンID.ボス対決
    #│
    #○難易度に応じたボスキャラをリストアップする
    一覧 = ボス出現DB.get(DS.情報.難易度, ボス出現DB.get(0))
    #　 ＼（難易度に該当するレコードが見つからない場合）
        #↓
        #〇デフォルトの一覧を使用する
        #┴
    #│
    #◇┐ボスキャラを出現する
    X座標 = DS.仕様.画面幅 // 2
    if isinstance(一覧, tuple):
    #　├┐（反転タイミングの場合）
        #↓
        #◎└┐リストアップしたボスキャラを登場する
        出現数 = 0
        for 種類ID in 一覧:
            #│＼（すべての繰り返し処理を場合）
            #│ ↓
            #│ ▼繰り返し処理を抜ける
            #│
            #≫アクション・メソッドで敵機(ボス)を生成する
            出現数  += 1
            Y座標   = DS.仕様.キャラ幅.ボス * (出現数 + 1) * -2
            敵機生成( X座標, Y座標, 種類ID, False, True)
        #┴　┴
    else:
    #　└┐（その他）
        #↓
        #≫アクション・メソッドで敵機(ボス)を生成する
        Y座標   = DS.仕様.キャラ幅.ボス * -2
        敵機生成( X座標, Y座標, 一覧, False, True)
    #┴　┴