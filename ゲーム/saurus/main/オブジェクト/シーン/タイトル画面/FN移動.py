#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃シーン：タイトル画面(移動機能)
#┠─────────────────────────────────────
#┃更新コントローラが移動プロセスで実行するアクション・メソッド
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
import  pyxel
import  main.GAME共通                   as 共通処理
from    main.データセット               import データセット as DS
from    main.オブジェクト.キャラ.発電機 import 発電機生成
from    main.オブジェクト.キャラ.運搬機 import 運搬機生成
from    ..DB                            import シーンID

#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃仕様
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
class 仕様クラス:
    #--------------------------------------------------------------------
    # カウンタ
    #--------------------------------------------------------------------
    #□持続時間  ：終了画面を持続する長さ（単位：fps）
    持続時間    = 20

#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃情報
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
class 情報クラス:
    #--------------------------------------------------------------------
    # カウンタ
    #--------------------------------------------------------------------
    #□開始時間  ：終了画面を持続するカウンタ
    開始時間            = 0
    フィールドリスト    = (0,1)
    ペダルリスト        = (None,None,None,None,None,None,None,None)

#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃メイン
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
class 移動クラス:
    #┌───────────────────────────────────
    #│初期化
    #└───────────────────────────────────
    def __init__(self):
        #┬
        #〇個体オブジェクトのリファレンスを用意する
        self.仕様  = 仕様クラス()
        self.情報  = 情報クラス()
        #┴

    #┌───────────────────────────────────
    #│機能実行
    #└───────────────────────────────────
    def 実行(self):
        #┬
        #●次のシーン『プレイ画面』に進行する
        self.Fn次シーン準備()
        #│
        #●MMPをキャリブレーションする
        self.実行_ペダル設定()
        #┴
	#────────────────────────────────────
    def 実行_ペダル設定(self):
        #┬
        for i in range(0,7):
            if True: self.情報.ペダルリスト
        #┴

    #┌───────────────────────────────────
    #│次シーンの前準備
    #└───────────────────────────────────
    def Fn次シーン準備(self):
        #┬
        if not pyxel.btnr(pyxel.KEY_SPACE)  : return

        #◇┐終了画面を開始する
        if self.情報.開始時間 == 0:
        #　├┐（待ちを開始する場合）
            #↓
            #●取得音止める
            pyxel.stop()
            #│
            #○持続カウントを開始する
            self.情報.開始時間   = pyxel.frame_count
            #┴
        #　└┐（その他）
            #┴
        #│
        #●取得音を鳴らす
        if pyxel.frame_count % 5 == 0: 共通処理.効果音.アイテム取得()
        #│
        #◇┐次のシーンに進行する
        経過時間 = pyxel.frame_count - self.情報.開始時間
        時間あり = (経過時間 < self.仕様.持続時間)
        if 時間あり: return
        #│＼（まだ時間がある場合）
        #│ ↓
        #│ ▼処理を中断する
        #│
        #●発電機オブジェクトを生成する
        #●運搬機オブジェクトを生成する
        発電機生成((0,1))
        発電機生成((6,7))
        運搬機生成(14)
        運搬機生成(15)
        #│
        #○ゲーム情報をリセットする
        #○シーンを『プレイ画面』に進行する
        #●BGMを鳴らす
        DS.情報.プレイ時間  = 1
        DS.情報.シーン = シーンID.プレイ画面
        共通処理.BGM.自動選択()
        #┴