#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃結果機能→表現プロセスのアクションメソッド
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
import pyxel
from   main.データセット import データセット as DS

#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃メイン
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
class 本体:
    #┌───────────────────────────────────
    #│プロセス実行
    #└───────────────────────────────────
    def 実行(self):
        #┬
        #○画面をクリアする
        pyxel.cls(0)
        #│
        #●シーン別で表現する
        DS.obj.シーン[DS.情報.シーン].FN表現.実行()
        #│
        #●オブジェクト別で表現する
        self.Fnオブジェクト別の表現()
        #│
        #●シーン横断で表現する
        self.Fnシーン横断の表現()
        #┴
	#────────────────────────────────────
    def Fnオブジェクト別の表現(self):
        pass
	#────────────────────────────────────
    def Fnシーン横断の表現(self):
        #┬
        #△┐救出数を用意する
        if len(DS.obj.運搬機) > 0:
        #　├┐（運搬機コンテナが空の場合）
            #↓
            #○運搬機から救出数を用意する
            救出数1 = DS.obj.運搬機[0].情報.救出数
            救出数2 = DS.obj.運搬機[1].情報.救出数
            #┴
        else:
        #　└┐（その他）
            #↓
            #○救出数を初期値(0点)で用意する
            救出数1 = 0
            救出数2 = 0
            #┴
        #│
        #○用意した救出数を画面表示する
        pyxel.text(18, 2, str(救出数1).zfill(4), 7)
        pyxel.text(88, 2, str(救出数2).zfill(4), 7)
        #┴