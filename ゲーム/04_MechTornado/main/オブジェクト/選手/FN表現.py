#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃結果機能(表現プロセス)のアクションメソッド
#┣━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃選手の姿勢を表現する
#┃・屈伸：フットレバーを持ち上げた場合にとる態勢   ※物理体・画面
#┃・着地：両方のハンドスイッチを離した倍にとる態勢 ※画面のみ
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
# [システム共通]
import pyxel

# [アプリ共通]
import MMP

# [ゲーム共通]
from main.データセット import DS

#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃データセット：仕様
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
class 仕様:
    pass

#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃データセット：情報
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
class 情報:
    pass

#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃メイン
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
class 本体:
    #┌───────────────────────────────────
    #│初期化
    #└───────────────────────────────────
    def __init__(self, 引数_上位): #① 上位のコンポジットクラス
        #┬
        #○データセット(コンポジット)のリファレンスを用意する
        self._仕様 = 引数_上位.仕様
        self._情報 = 引数_上位.情報
        #│
        #≫データセットを用意する
        self.仕様  = 仕様()
        self.情報  = 情報()
        #┴

    #┌───────────────────────────────────
    #│プロセス機能を実行
    #└───────────────────────────────────
    def 実行(self):
        #┬
        #●選手の姿勢を表現する
        self.Fn姿勢()
        #┴

    #┌───────────────────────────────────
    #│選手の姿勢
    #└───────────────────────────────────
    def Fn姿勢(self):
        #┬
        #●物理体で表現する
        self.Fn姿勢_物理体()
        #│
        #●画面で表現する
        self.Fn姿勢_画面()
        #┴
	#────────────────────────────────────
    def Fn姿勢_物理体(self):
        #┬
        #●屈伸姿勢を表現する ※人形のDCモータを駆動する
        姿勢ID = self._仕様.屈伸
        装置No = DS.仕様.ハード.装置No_屈伸
        最大値 = DS.仕様.ハード.モータ最大
        最小値 = DS.仕様.ハード.モータ最小
        出力値 = (最大値) if self._情報.姿勢 == 姿勢ID else (最小値)
        MMP.接続.Pwm.Out(装置No, 出力値)
        #│
        #●着地姿勢を表現する ※サーボで鉄棒をロックする
        姿勢ID = self._仕様.着地
        装置No = DS.仕様.ハード.装置No_着地
        最大値 = DS.仕様.ハード.サーボ最大
        最小値 = DS.仕様.ハード.サーボ最小
        出力値 = (最小値) if self._情報.姿勢 == 姿勢ID else (最大値)
        MMP.接続.Pwm.Out(装置No, 出力値)
        #┴
	#────────────────────────────────────
    def Fn姿勢_画面(self):
        #┬
        #◇┐姿勢を表示する
        if self._情報.姿勢 == self._仕様.屈伸:
        #　├┐（姿勢が屈伸の場合）
            #↓
            #○屈伸の姿勢を表示する
            pyxel.blt(60,15, 0, 24,0, 39,119, 0)
        else:
        #　└┐（その他）
            #↓
            #○まっすぐの姿勢を表示する
            pyxel.blt(80,15, 0,  0,0, 23,119, 0)
        #┴　┴
