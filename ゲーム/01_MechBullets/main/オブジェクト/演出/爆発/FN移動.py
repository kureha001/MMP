#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃キャラクタ：爆発(移動機能）
#┠─────────────────────────────────────
#┃更新コントローラが移動プロセスで実行するアクション・メソッド
#┃・下位にデータセット･クラス(仕様)を持つ
#┃※画面外に移動した際、オブジェクトを削除する
#┃※最大サイズに達した際、オブジェクトを削除する
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
import  pyxel
from    main.データセット import データセット as DS

#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃仕様
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
class 仕様クラス:
    def __init__(self       ,
            引数_最大半径   ):  #① 爆発の範囲(半径)

        self.速度Y      = 0.7
        self.最大半径   = 引数_最大半径

#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃メイン
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
class 移動クラス:
    #┌───────────────────────────────────
    #│初期化
    #└───────────────────────────────────
    def __init__(self       ,
            引数_個体       ,   #① 個体オブジェクト
            引数_最大半径   ):  #② 爆発の範囲(半径)
        #┬
        #〇個体オブジェクトのリファレンスを用意する
        self._個体  = 引数_個体
        self._情報  = 引数_個体.情報
        #│
        #〇≫データセットを用意する
        self.仕様   = 仕様クラス(引数_最大半径)
        #┴

    #┌───────────────────────────────────
    #│機能実行
    #└───────────────────────────────────
    def 実行(self):
        #┬
        #●前進(下方に移動)する
        self.Fn移動()
        #│
        #●場外は消滅する
        self.Fn場外()
        #┴
	#────────────────────────────────────
    def Fn移動(self):
        #┬
        #○座標を更新する
        self._情報.Y += self.仕様.速度Y
        #┴
	#────────────────────────────────────
    def Fn場外(self):
        #┬
        #○位置を確認する
        x = self._情報.X
        y = self._情報.Y
        r = self.仕様.最大半径
        確認X = (x < -r or x > r + DS.仕様.基本.画面幅  )
        確認Y = (y < -r or y > r + DS.仕様.基本.画面高 )
        if 確認X or 確認Y:
        #│ ＼（画面内の場合）
            #↓
            #○この個体を削除する
            #▼処理を中断する
            DS.obj.爆発.remove(self._個体)
            return
        #│
        #○拡大タイミングを確認する
        if pyxel.frame_count % 2 != 0: return
        #│＼（描画するターンではない場合）
        #│ ↓
        #│ ▼処理を中断する
        #│
        #○半径を大きくする
        self._情報.半径 += 1
        #│
        #○大きさ(半径)を確認する
        if self._情報.半径 > self.仕様.最大半径:
        #│ ＼（最大半径を超えた場合）
            #↓
            #○この個体を削除する
            if self._個体 in DS.obj.爆発: DS.obj.爆発.remove(self._個体)
        #┴ ┴