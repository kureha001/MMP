#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃共通処理
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
import pyxel
from   main.汎用部品        import mmp
from   .データセット        import データセット as DS
from   .オブジェクト.シーン import シーンID

#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃ＭＭＰによる演奏
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
class BGM_DFP():

    # シーン別のMP3ファイル再生時間
    シーン = {1:168, 2:240, 3:240 }

	#────────────────────────────────────
    # シーンに合ったBGMを演奏する
	#────────────────────────────────────
    def 自動選択():
        シーン  = DS.情報.シーン
        if   シーン == シーンID.タイトル画面: BGM_DFP.演奏(1)
        elif シーン == シーンID.プレイ画面  : BGM_DFP.演奏(2)
        elif シーン == シーンID.終了画面    : BGM_DFP.演奏(3)
	#────────────────────────────────────
    # ルートフォルダの指定トラックをループ演奏する
	#────────────────────────────────────
    def 演奏(引数_ファイル番号):
        DS.情報.再生時間 = BGM_DFP.シーン[引数_ファイル番号]
        入出力.MMP.DFP_PlayFolderTrack(1,1,引数_ファイル番号)
	#────────────────────────────────────
    # 繰返し再生する
	#────────────────────────────────────
    def 繰返し再生():
        #┬
        #○BGMを繰返し条件を確認する
        フレーム判定 = (pyxel.frame_count % 30 != 0)
        再生中要否   = (DS.情報.再生時間 is None)
        if フレーム判定 or 再生中要否: return
        #│＼（フレーム処理タイミングでないか、BGMの再生が不要の場合）
        #│ ↓
        #│ ▼処理を中断する
        #│
        #○再生時間カウンタをカウントダウンする
        DS.情報.再生時間 -= 1
        if DS.情報.再生時間 > 0: return
        #│＼（再生時間が終了していない場合）
        #│ ↓
        #│ ▼処理を中断する
        #│
        #○再生時間カウンタを初期化する
        DS.情報.再生時間 = None
        #│
        #●ＢＧＭを再生する
        BGM_DFP.自動選択()
        #┴

#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃ＭＭＰによる入力走査
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
class 入出力():

    MMP     = None  # MMPオブジェクト

	#────────────────────────────────────    
    def MMP_初期化():
        #┬
        #●MMPを実体化する。
        入出力.MMP = mmp()
        #│
        #●MMPを接続する
        入出力.MMP.通信接続_自動()
        #│
        #●アナログ入力を設定する
        入出力.MMP.アナログ設定(
            4,  # 使用するHC4067の個数(1～4)
            1,  # 使用するHC4067のPin数(1～16)
            100 # アナログ値の丸め(この数値以下は切り捨て)
            )
        #┴
	#────────────────────────────────────    
    def 停止():
        入出力.MMP.PWM_VALUE(DS.ハード.装置No_屈伸, DS.ハード.モータ最小)
        入出力.MMP.PWM_VALUE(DS.ハード.装置No_着地, DS.ハード.サーボ最大)
