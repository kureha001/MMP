#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃シーン：プレイ画面(描画機能)
#┠─────────────────────────────────────
#┃描画コントローラが描画プロセスで実行するアクション・メソッド
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
import  pyxel
from    main.データセット               import データセット as DS
from    ..DB                            import シーンID

#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃メイン
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
class 描画クラス:
    #┌───────────────────────────────────
    #│初期化
    #└───────────────────────────────────
    def __init__(self):
        pass
    #┌───────────────────────────────────
    #│機能実行
    #├───────────────────────────────────
    #│※自機が無い場合は表示不可 または 意味がない為、処理をスキップする
    #└───────────────────────────────────
    def 実行(self):
        #┬
        #〇自機を確認する
        if not DS.obj.自機: return
        #│＼（自機が存在しない場合）
        #│ ↓
        #│ ▼処理を中断する
        #│
        #●発電機の状況を描画する
        self.Fn発電機()
        #│
        #●運搬機の状況を描画する
        self.Fn運搬機()
        #┴

    #┌───────────────────────────────────
    #│発電機を描画
    #└───────────────────────────────────
    def Fn発電機(self):
        #┬
        #◎└┐発電機のサイクルを描画する
        出力 = DS.運搬機[0].情報.出力
        pyxel.rect(0, DS.仕様.基本.画面高 - 12, 出力, 3, 7)

        出力 = DS.運搬機[1].情報.出力
        pyxel.rect(0, DS.仕様.基本.画面高 - 6, 出力, 3,  8)
        #┴　┴

    #┌───────────────────────────────────
    #│運搬機を描画
    #└───────────────────────────────────
    def Fn運搬機(self):
        #┬
        #◎└┐運搬機の出力を描画する
        for i in range(2):
            出力 = DS.運搬機[i].情報.出力
            pyxel.rect(0, DS.仕様.基本.画面高 - 12, 出力, 3, 7)
        #┴　┴
