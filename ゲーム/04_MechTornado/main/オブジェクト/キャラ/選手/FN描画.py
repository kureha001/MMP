#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃キャラクタ：発電機(移動プロセス)
#┠─────────────────────────────────────
#┃更新コントローラが移動プロセスで実行するアクション・メソッド
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
import pyxel
from   main.データセット import データセット as DS
import main.GAME共通                         as 共通処理

#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃メイン
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
class 描画クラス:
    #┌───────────────────────────────────
    #│初期化
    #└───────────────────────────────────
    def __init__(self   ,
            引数_個体   ):   #① 個体オブジェクト
        #┬
        #〇個体オブジェクトのリファレンスを用意する
        self._情報  = 引数_個体.情報
        #┴

    #┌───────────────────────────────────
    #│機能実行
    #└───────────────────────────────────
    def 実行(self):
        #┬
        #選手の姿勢を描画する
        if self._情報.姿勢 == 1: pyxel.blt( 60,20, 0, 24,0, 39,119, 0)
        else                   : pyxel.blt( 80,20, 0,  0,0, 23,119, 0)
        #│
        #●脚を動作する
        PWM_No = DS.仕様.PWM_Ch_屈伸
        PWM値  = (DS.仕様.モータ最大) if self._情報.姿勢 == 1 else (DS.仕様.モータ最小)
        共通処理.入出力.MMP.PWM_VALUE(PWM_No, PWM値)
        #│
        #●両手を動作する
        PWM_No = DS.仕様.PWM_Ch_フィニッシュ
        PWM値  = (DS.仕様.サーボ最小) if self._情報.姿勢 == 2 else (DS.仕様.サーボ最大)
        共通処理.入出力.MMP.PWM_VALUE(PWM_No, PWM値)
        #┴