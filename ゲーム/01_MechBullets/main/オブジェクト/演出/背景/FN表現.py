#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃結果機能(表現プロセス)のアクションメソッド
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
# [システム共通]
import pyxel

# [ゲーム共通]
from main.データセット import DS

#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃メイン
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
class 本体:
    #┌───────────────────────────────────
    #│初期化
    #└───────────────────────────────────
    def __init__(self, 引数_上位): #① 上位のコンポジットクラス
        #┬
        #○データセット(コンポジット)のリファレンスを用意する
        self._上位 = 引数_上位
        self._仕様 = 引数_上位.仕様
        self._情報 = 引数_上位.情報
        #┴

    #┌───────────────────────────────────
    #│機能実行
    #└───────────────────────────────────
    def 実行(self):
        #┬
        #◇┐銀河を描画する
        if DS.情報.シーン != DS.仕様.シーンID.タイトル画面:
        #　├┐（シーンが『タイトル』以外の場合）
            #↓
            #○銀河を描画する
            pyxel.blt(0,0, 1, 0,0, 8*8,8*9, 0)
            #┴
        #　└┐（その他）
            #┴
        #│
        #◎└┐すべての星を描画する
        for 座標X, 座標Y, 速度 in self._情報.星:
            #│＼（すべての処理を終えた場合）
            #│ ↓
            #│ ▼繰り返し処理を抜ける
            #│
            #○速度に応じて色を変える
            #○星を表示する
            if   速度 > 0.8 : 色 = 7
            elif 速度 > 0.6 : 色 = 6
            else            : 色 = 12
            pyxel.pset(座標X, 座標Y, 色)
            #┴
        #│
        #◇┐惑星を描画する
        if DS.情報.シーン != DS.仕様.シーンID.タイトル画面:
        #　├┐（シーンが『タイトル』以外の場合）
            #↓
            #○銀河を描画する
            pyxel.blt(8*7,8*6, 1, 8*7,8*6, 8*10,8*14, 0)
            #┴
        #　└┐（その他）
            #┴
