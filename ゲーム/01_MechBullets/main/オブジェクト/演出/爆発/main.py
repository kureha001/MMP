#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃キャラクタ：爆発　※自機・敵機で共用する
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
from main.データセット  import データセット as DS
from .FN動作           import 本体 as 動作機能の生成
from .FN表現           import 本体 as 表現機能の生成

#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃データセット：仕様
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
class 仕様:
    pass

#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃データセット：情報
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
class 情報:
    def __init__(self,
            引数_X座標  ,	#① 出現させる位置(X座標)
            引数_Y座標  ):  #② 出現させる位置(Y座標)
        #--------------------------------------------------------------------
        # 画面位置／大きさ
        #--------------------------------------------------------------------
        #□ X        ：画面位置(X座標)
        #□ Y        ：画面位置(Y座標)
        #□半径      ：爆発を描画する大きさ(単位：半径)
        self.X      = 引数_X座標
        self.Y      = 引数_Y座標
        self.半径   = 0

#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃メイン
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
class 本体:
    def __init__(self,
            引数_X座標      ,   #① 出現させる位置(X座標)
            引数_Y座標      ,   #② 出現させる位置(Y座標)
            引数_最大半径   ):  #③ 爆発の範囲(半径)
		#┬
        #≫データセットを用意する
        self.仕様  = 仕様()
        self.情報   = 情報(引数_X座標, 引数_Y座標)
        #│
        #≫プロセス機能を用意する
        self.FN動作 = 動作機能の生成(self, 引数_最大半径)
        self.FN表現 = 表現機能の生成(self)
        #│
        #○用意済みのインスタンスに生成する
        DS.obj.爆発.append(self)
        #┴