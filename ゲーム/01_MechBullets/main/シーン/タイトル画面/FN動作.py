#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃シーン：タイトル画面(移動機能)
#┠─────────────────────────────────────
#┃更新コントローラが移動プロセスで実行するアクション・メソッド
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
import pyxel
import sys; sys.path.append('..');     import 共通.音声
from   main.データセット               import データセット as DS

#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃データセット：仕様
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
class 仕様:

    #□持続時間  ：終了画面を持続する長さ（単位：fps）
    持続時間    = 20

#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃データセット：
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
class 情報:

    #□開始時間  ：終了画面を持続するカウンタ
    開始時間    = 0

#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃メイン
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
class 本体:
    #┌───────────────────────────────────
    #│初期化
    #└───────────────────────────────────
    def __init__(self, 引数_上位): #① 上位のコンポジットクラス
        #┬
        #○データセット(コンポジット)のリファレンスを用意する
        self._仕様 = 引数_上位.仕様
        self._情報 = 引数_上位.情報
        #│
        #≫データセットを用意する
        self.仕様  = 仕様()
        self.情報  = 情報()

    #┌───────────────────────────────────
    #│機能実行
    #└───────────────────────────────────
    def 実行(self):
        #┬
        #●プレイヤー人数を選択する
        self.実行_人数選択()
        #│
        #●操作方法を選択する
        self.実行_操作方法選択()
        #│
        #●MMPをキャリブレーションする
        self.実行_MMP調整()
        #│
        #○選択状況を確認する
        判定1 = (DS.情報.人数 == 0)                               #人数選択
        判定2 = (DS.情報.操作手段 is None)                        #操作選択
        判定3 = ((DS.情報.人数 == 3) and (DS.情報.操作手段 != 2)) #MMPパッド条件
        if 判定1 or 判定2 or 判定3: return
        #│＼（未選択の場合）
        #│ ↓
        #│ ▼処理を中断する
        #│
        #○シーンの遷移を指示する
        DS.情報.遷移要否 = True
        #│
        #●クリック音を鳴らす
        共通.音声.クリック音()
        #┴
        #┴
	#────────────────────────────────────
    def 実行_人数選択(self):
        #┬
        #◇┐プレイヤー数を決める
        if pyxel.btnr(pyxel.KEY_1):
        #　├┐（「１」キー入力した場合）
            #↓
            #○プレイヤー人数を１名でセットする
            DS.情報.人数 = 1
            #●クリック音を鳴らす
            共通.音声.クリック音()
            #┴
        elif pyxel.btnr(pyxel.KEY_2):
        #　├┐（「２」キー入力した場合）
            #↓
            #○プレイヤー人数を2名でセットする
            DS.情報.人数 = 2
            #●クリック音を鳴らす
            共通.音声.クリック音()
            #┴
        elif pyxel.btnr(pyxel.KEY_3):
        #　├┐（「３」キー入力した場合）
            #↓
            #○プレイヤー人数を2名でセットする
            DS.情報.人数 = 3
            #●クリック音を鳴らす
            共通.音声.クリック音()
            #┴
        #　└┐（その他）
        #┴　┴
	#────────────────────────────────────
    def 実行_操作方法選択(self):
        #┬
        #◇┐プレイヤー数を決める
        if pyxel.btnr(pyxel.KEY_K):
        #　├┐（「Ｋ」キー入力した場合）
            #↓
            #○キーボード操作でセットする
            DS.情報.操作手段 = 0
            #●クリック音を鳴らす
            共通.音声.クリック音()
            #┴
        if pyxel.btnr(pyxel.KEY_J):
        #　├┐（「Ｊ」キー入力した場合）
            #↓
            #○ジョイパッド操作でセットする
            DS.情報.操作手段 = 1
            #●クリック音を鳴らす
            共通.音声.クリック音()
            #┴
        if pyxel.btnr(pyxel.KEY_M):
        #　├┐（「Ｍ」キー入力した場合）
            #↓
            #○ＭＭＰ操作でセットする
            DS.情報.操作手段 = 2
            #●クリック音を鳴らす
            共通.音声.クリック音()
        #　└┐（その他）
        #┴　┴
	#────────────────────────────────────
    def 実行_MMP調整(self):
        #┬
        if pyxel.btnr(pyxel.KEY_UP):
            DS.情報.MMP中央値 += 5
            if DS.情報.MMP中央値 > 1020 : DS.情報.MMP中央値 = 0
            #●クリック音を鳴らす
            共通.音声.クリック音()
        #│
        if pyxel.btnr(pyxel.KEY_DOWN):
            DS.情報.MMP中央値 -= 5
            if DS.情報.MMP中央値 < 0    : DS.情報.MMP中央値 = 1020
            #●クリック音を鳴らす
            共通.音声.クリック音()
        #│
        if pyxel.btnr(pyxel.KEY_LEFT):
            DS.情報.MMP反応率 -= 1
            if DS.情報.MMP反応率 < 1    : DS.情報.MMP反応率 = 20
            #●クリック音を鳴らす
            共通.音声.クリック音()
        #│
        if pyxel.btnr(pyxel.KEY_RIGHT):
            DS.情報.MMP反応率 += 1
            if DS.情報.MMP反応率 > 20   : DS.情報.MMP反応率 = 0
            #●クリック音を鳴らす
            共通.音声.クリック音()
        #┴