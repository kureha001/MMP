#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃キャラクタ：選手(屈伸プロセス)
#┠─────────────────────────────────────
#┃更新コントローラが衝突プロセスで実行するアクション・メソッド
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
import main.GAME共通                         as 共通処理
from   main.データセット import データセット as DS

#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃メイン
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
class 移動クラス:
    #┌───────────────────────────────────
    #│初期化
    #└───────────────────────────────────
    def __init__(self   ,
            引数_個体   ):   #① 個体オブジェクト
        #┬
        #○個体オブジェクトのリファレンスを用意する
        self._情報  = 引数_個体.情報
        #┴

    #┌───────────────────────────────────
    #│機能実行
    #└───────────────────────────────────
    def 実行(self):
        #┬
        #○姿勢を『まっすぐ』に仮設定する
        self._情報.姿勢 = 0
        #│
        #●屈伸の態勢かを調べる
        self.Fn屈伸態勢の判定()
        #│
        #●フィニッシュの態勢かを調べる
        self.Fnフィニッシュ態勢の判定()
        #┴
	#────────────────────────────────────    
    def Fn屈伸態勢の判定(self):
        #┬
        #○屈伸するかを調べる
        屈伸 = (共通処理.入出力.MMP.mmpAnaVal[0][0]  < DS.仕様.スイッチ閾値) # 脚あげ(SW=OFF)
        左手 = (共通処理.入出力.MMP.mmpAnaVal[0][1]  > DS.仕様.スイッチ閾値) # 握る(SW=ON)
        右手 = (共通処理.入出力.MMP.mmpAnaVal[0][2]  > DS.仕様.スイッチ閾値) # 握る(SW=ON)
        判定   = 屈伸 and 左手 and 右手  # 脚を上げて両手を握る
        #│
        #●態勢を『屈伸』にする
        if  判定: self._情報.姿勢 = 1
        #┴
	#────────────────────────────────────    
    def Fnフィニッシュ態勢の判定(self):
        #┬
        #○フィニッシュするかを調べる
        左手 = (共通処理.入出力.MMP.mmpAnaVal[0][1]  < DS.仕様.スイッチ閾値) # 離す(SW=OFF)
        右手 = (共通処理.入出力.MMP.mmpAnaVal[0][2]  < DS.仕様.スイッチ閾値) # 離す(SW=OFF)
        判定   = 左手 and 右手 # 両手を離す
        #│
        #●態勢を『フィニッシュ』にする
        if  判定: self._情報.姿勢 = 2
        #┴
