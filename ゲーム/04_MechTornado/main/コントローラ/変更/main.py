#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃コントローラ：変更
#┠─────────────────────────────────────
#┃移動プロセスを実行する
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
import pyxel
import main.GAME共通                         as 共通処理
from   main.データセット import データセット as DS
from   .P移動            import 本体         as P移動プロセスの生成

#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃メイン
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
class 本体:
    #┌───────────────────────────────────
    #│初期化
    #└───────────────────────────────────
    def __init__(self):
        #┬
        #≫更新アクションを用意する
        self.P移動 = P移動プロセスの生成() 
        #┴

	#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
	#┃機能をコントロール
	#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
    def 実行(self):
        #┬
        #●アナログ値を読み取る
        共通処理.入出力.MMP.アナログ読取()
        #│
        #●ＢＧＭをリピート再生する
        self.FnリピートBGM()
        #│
        #●アクションを実行する
        self.P移動.実行()
        #┴ 
	#────────────────────────────────────
    def FnリピートBGM(self):
        #┬
        #○BGMをリピート条件を確認する
        フレーム判定 = (pyxel.frame_count % 30 != 0)
        再生中要否   = (DS.情報.再生時間 is None)
        if フレーム判定 or 再生中要否: return
        #│＼（フレーム処理タイミングでないか、BGMの再生が不要の場合）
        #│ ↓
        #│ ▼処理を中断する
        #│
        #○再生時間カウンタをカウントダウンする
        DS.情報.再生時間 -= 1
        if DS.情報.再生時間 > 0: return
        #│＼（再生時間が終了していない場合）
        #│ ↓
        #│ ▼処理を中断する
        #│
        #○再生時間カウンタを初期化する
        DS.情報.再生時間 = None
        #│
        #●ＢＧＭを再生する
        共通処理.BGM_DFP.自動選択()
        #┴