#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃共通：座標返還
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
import math

#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃座標・速度を角度指定で変換する
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
class 角度で変換:

	#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
	#┃座標と速度を変換する
	#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
    def Fn座標と速度(
            引数_原点   ,
            引数_中点   ,
            引数_角度   ,
            引数_速度   ):

        座標 = 角度で変換.Fn座標(引数_中点, 引数_原点, 引数_角度)
        速度 = 角度で変換.Fn速度(引数_原点, 座標, 引数_速度)

        return (座標, 速度)
    
	#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
	#┃座標と速度を変換する(任意角度で等分)
	#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
    def Fn座標と速度_分割(
            引数_中点   ,
            引数_原点   ,
            引数_開始角 ,
            引数_終了角 ,
            引数_分割数 ,
            引数_速度   ):

        結果一覧 = []

        if 引数_分割数 < 1: return 結果一覧

        分割角度 = (引数_終了角 - 引数_開始角) / 引数_分割数

        for カウンタ in range(引数_分割数):

            角度 = 引数_開始角 + (分割角度 * カウンタ)
            座標 = 角度変換.Fn座標(引数_中点, 引数_原点, 角度)
            速度 = 角度変換.Fn速度(引数_原点, 座標, 引数_速度)

            結果一覧.append({
                    "角度": 角度,
                    "座標": 座標,
                    "速度": 速度 })

        return 結果一覧

	#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
	#┃座標を変換する
	#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
    def Fn座標(
            引数_中点   ,
            引数_原点   , 
            引数_角度   ):

        中点X, 中点Y = 引数_中点
        原点X, 原点Y = 引数_原点
        角度 = math.radians(引数_角度)

        距離X = 原点X - 中点X
        距離Y = 原点Y - 中点Y

        移動X = 距離X * math.cos(角度) - 距離Y * math.sin(角度)
        移動Y = 距離X * math.sin(角度) + 距離Y * math.cos(角度)

        return (移動X + 中点X, 移動Y + 中点Y)

	#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
	#┃速度を変換する
	#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
    def Fn速度(
            引数_原点   ,
            引数_移動点 ,
            引数_速度   ):

        距離X = 引数_移動点[0] - 引数_原点[0]
        距離Y = 引数_移動点[1] - 引数_原点[1]
        全体距離 = math.hypot(距離X, 距離Y)

        if 全体距離 != 0:
            速度X = (距離X / 全体距離) * 引数_速度
            速度Y = (距離Y / 全体距離) * 引数_速度
        else:
            速度X, 速度Y = 0.0, 0.0

        return (速度X, 速度Y)
