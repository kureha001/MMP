#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃結果機能→表現プロセスのアクションメソッド
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
import pyxel
from   main.データセット import データセット as DS

#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃メイン
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
class 表現クラス:
    #┌───────────────────────────────────
    #│初期化
    #└───────────────────────────────────
    def __init__(self   ,
            引数_個体   ):  #① 個体オブジェクト
        #┬
        #○個体オブジェクトのリファレンスを用意する
        self._仕様  = 引数_個体.仕様
        self._情報  = 引数_個体.情報
        #┴

    #┌───────────────────────────────────
    #│機能実行
    #└───────────────────────────────────
    def 実行(self):
        #┬
        #●画面で表現する
        self.Fn画面()
        #│
        #●立体物で表現する
        self.Fn立体()
        #┴

    #┌───────────────────────────────────
    #│画面で表現
    #└───────────────────────────────────
    def Fn画面(self):
        #┬
        #●タイトル画像を表現する
        #●時間選択を表現する
        #●人数選択を表現する
        #●開始可能を表現する
        self.Fn画面_タイトル画像()
        self.Fn画面_時間選択()
        self.Fn画面_人数選択()
        self.Fn画面_開始可能()
        #┴
	#────────────────────────────────────
    def Fn画面_タイトル画像(self):
        #┬
        #○タイトル画像を表現する
        pyxel.blt( 0,10, 2, 0,0, 119,79, 0) # タイトル
        pyxel.blt( 8,76, 0, 0,0,  50,49, 7) # 恐竜(左側)
        pyxel.blt(62,76, 0, 0,64, 50,99, 7) # 恐竜(右側)
        #┴
	#────────────────────────────────────
    def Fn画面_時間選択(self):
        #┬
        #○タイトルを表現する
        文字 = "<<TIME>>"
        縦   = 124
        pyxel.text(45, 縦  , 文字, 5)
        pyxel.text(44, 縦-1, 文字, 7)
        #│
        #○カーソルを表現する
        縦   = 130
        文字 = "[<-]       [->]"
        pyxel.text(31, 縦  , 文字, 3)
        pyxel.text(30, 縦-1, 文字, 7)
        #│
        #○選択内容を表現する
        文字 = self._仕様.時間一覧[self._情報.時間番号][0]
        pyxel.text(51, 縦  , 文字, 8)
        pyxel.text(50, 縦-1, 文字, 7)
        #┴
	#────────────────────────────────────
    def Fn画面_人数選択(self):
        #┬
        #○タイトルを表現する
        文字 = "<<MEMBER>>"
        縦 = 138
        pyxel.text(41, 縦, 文字, 5)
        pyxel.text(40, 縦, 文字, 7)
        #│
        #◎└┐全択肢を表現する
        for 人数 in range(0,5):
            #│＼（人数パターンを走査し終えた場合）
            #│ ↓
            #│ ▼繰り返し処理を抜ける
            #│
            #○択肢を表現する
            縦 = 144
            横 = 人数 * 15
            色 = (8) if 人数 == DS.情報.人数 else (3)
            pyxel.text(26 + 横, 縦, f"[%d]" % 人数, 色)
            pyxel.text(25 + 横, 縦, f"[%d]" % 人数,  7)
        #┴　┴
	#────────────────────────────────────
    def Fn画面_開始可能(self):
        #┬
        #○選択内容を調べる
        if self._情報.時間番号 == 0: return
        if DS.情報.人数        == 0: return
        #│＼（プレイ時間かチーム人数が未選択の場合）
        #│ ↓
        #│ ▼処理を中断する
        #│
        #○開始ガイダンスを表現する
        文字 = "HIT SPACE KEY TO START"
        pyxel.text(16, 154, 文字, 5)
        pyxel.text(15, 153, 文字, pyxel.frame_count % 16)
        #┴

    #┌───────────────────────────────────
    #│立体物で表現
    #└───────────────────────────────────
    def Fn立体(self):
        pass
