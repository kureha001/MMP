#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃変更機能(動作プロセス)のアクションメソッド
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
# [システム共通]
import pyxel

# [アプリ共通]
import sys; sys.path.append('..'); import 共通.MMP
import sys; sys.path.append('..'); import 共通.音声

# [ゲーム共通]
from main.データセット import DS

#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃データセット：仕様
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
class 仕様:

    #□人数一覧：人数選択における数字キーと人数の対応表
    人数一覧  = {
        pyxel.KEY_1: 1, # 1人同士の対戦プレイ(合計2名)
        pyxel.KEY_2: 2, # 2人同士の対戦プレイ(合計4名)
        pyxel.KEY_3: 3, # 3人同士の対戦プレイ(合計6名)
        pyxel.KEY_4: 4  # 4人同士の対戦プレイ(合計8名)
        }

#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃データセット：情報
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
class 情報:
    pass

#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃メイン
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
class 本体:
    #┌───────────────────────────────────
    #│初期化
    #└───────────────────────────────────
    def __init__(self, 引数_上位): #① 上位のコンポジットクラス
        #┬
        #○データセット(コンポジット)のリファレンスを用意する
        self._仕様 = 引数_上位.仕様
        self._情報 = 引数_上位.情報
        #│
        #≫データセットを用意する
        self.仕様  = 仕様()
        self.情報  = 情報()
        #┴

    #┌───────────────────────────────────
    #│プロセス機能を実行
    #└───────────────────────────────────
    def 実行(self):
        #┬ 
        #●砂時計の向きを変える
        self.Fn選択_砂時計の向き()
        #│
        #●選択内容をクリアする
        self.Fn選択_クリア()
        #│
        #●プレイ時間を選択する
        self.Fn選択_プレイ時間()
        #│
        #●チーム人数を選択する
        self.Fn選択_チーム人数()
        #│
        #○選択内容を調べる
        if not pyxel.btnr(pyxel.KEY_SPACE)  : return
        if self._情報.時間番号 == 0         : return
        if DS.情報.人数 == 0                : return
        #│＼（プレイ時間かチーム人数が未選択の場合）
        #│ ↓
        #│ ▼処理を中断する
        #│
        #○シーンの遷移を指示する
        DS.情報.遷移要否 = True
        #│
        #●クリック音を鳴らす
        共通.音声.クリック音()
        #┴
	#────────────────────────────────────
    def Fn選択_砂時計の向き(self):
        #┬ 
        #◇┐砂時計の向きを変える
        if pyxel.btnr(pyxel.KEY_UP):
        #　├┐（フレーム処理タイミングの場合）
            #↓
            #●赤を上にする
            self._情報.砂時計向き = True
            共通.MMP.接続.PWM_VALUE(self._仕様.砂時計,self._仕様.最小)
            #│
            #●クリック音を鳴らす
            共通.音声.クリック音()
            #┴
        elif pyxel.btnr(pyxel.KEY_DOWN):
        #　└┐（その他）
            #↓
            #●赤を下にする
            self._情報.砂時計向き = False
            共通.MMP.接続.PWM_VALUE(self._仕様.砂時計,self._仕様.最大)
            #│
            #●クリック音を鳴らす
            共通.音声.クリック音()
        #┴　┴
	#────────────────────────────────────
    def Fn選択_クリア(self):
        #┬ 
        #○対応キーを確認する
        if not pyxel.btnr(pyxel.KEY_0): return
        #│＼（対応するキーではない場合）
        #│ ↓
        #│ ▼処理を中断する
        #│
        #○選択内容をクリアする
        self._情報.時間番号 = 0
        DS.情報.プレイ時間  = 0
        DS.情報.人数        = 0
        #│
        #●クリック音を鳴らす
        共通.音声.クリック音()
        #┴
	#────────────────────────────────────
    def Fn選択_プレイ時間(self):
        #┬ 
        #◇┐プレイ時間を選択する
        if pyxel.btnr(pyxel.KEY_LEFT ):
        #　├┐（フレーム処理タイミングの場合）
            #↓
            #○時間を減らす
            増減 = (1) if self._情報.時間番号 > 0 else (0)
            self._情報.時間番号 -= 増減
            #│
            #●クリック音を鳴らす
            共通.音声.クリック音()
            #┴
        if pyxel.btnr(pyxel.KEY_RIGHT):
        #　└┐（その他）
            #↓
            #○時間を増やす
            上限 = len(self._仕様.時間一覧) - 1
            増減 = (1) if self._情報.時間番号 < 上限 else (0)
            self._情報.時間番号 += 増減
            #│
            #●クリック音を鳴らす
            共通.音声.クリック音()
        #┴　┴
	#────────────────────────────────────
    def Fn選択_チーム人数(self):
        #┬ 
        #○人数の一覧を用意する
        人数一覧 = self.仕様.人数一覧.keys()
        #│
        #◎└┐対戦人数を選択する
        for 人数 in 人数一覧:
            #│＼（一覧を走査し終えた場合）
            #│ ↓
            #│ ▼繰り返し処理を抜ける
            #│
            #◇┐有効な対戦人数で設定する
            if pyxel.btnr(人数) and 人数 in self.仕様.人数一覧:
            #　├┐（人数とキーが一致する場合）
                #↓
                #○対戦人数を設定する
                DS.情報.人数 = self.仕様.人数一覧[人数]
                #│
                #●クリック音を鳴らす
                共通.音声.クリック音()
                #┴
            #　└┐（その他）
        #┴　┴　┴