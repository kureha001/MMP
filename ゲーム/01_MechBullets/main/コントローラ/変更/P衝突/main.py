#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃コントローラ：更新：衝突プロセス
#┠─────────────────────────────────────
#┃各オブジェクトのアクション・メソッドを実行する
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
# [要素クラス]
from .P判定 import *

#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃メイン
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
class 本体:
    #┌───────────────────────────────────
    #│アクション実行
    #└───────────────────────────────────
    def 実行(self):
        #┬
        #○自機の弾攻撃を衝突する
        Fn攻撃( [
                DS.obj.敵機     ,
                DS.obj.弾_敵機  ] )
        #│
        #○自機の体当たりで衝突する
        Fn体当たり( [
                DS.obj.アイテム ,
                DS.obj.敵機     ,
                DS.obj.弾_敵機  ] )
        #┴

#┌───────────────────────────────────
#│衝突判定指示（攻撃）
#├───────────────────────────────────
#│自機の弾による攻撃で衝突を指示
#└───────────────────────────────────
def Fn攻撃(引数_対象セット):  #① 対象オブジェクト一覧のセット
    #┬
    #○自機の存在を確認する
    if not DS.obj.弾_自機: return
    #│＼（存在しない場合）
    #│ ↓
    #│ ▼処理を中断する
    #│
    #◎└┐対象に攻撃する
    for tmp弾 in DS.obj.弾_自機.copy():
        #│＼（すべての処理を終えた場合）
        #│ ↓
        #│ ▼繰り返し処理を抜ける
        #│
        #◎└┐対象に体当たりする
        for tmp対象一覧 in 引数_対象セット:
            #│＼（すべての対象を照会し終えた場合）
            #│ ↓
            #│ ▼繰り返し処理を終える
            #│
            #●敵機を攻撃する
            if P判定_攻撃(tmp弾, tmp対象一覧): break
            #│＼（弾が破壊された場合）
            #│ ↓
            #│ ▼次の弾を照会する
    #┴　┴　┴

#┌───────────────────────────────────
#│衝突判定指示（体当たり）
#├───────────────────────────────────
#│自機の体当たりによる攻撃で衝突を指示
#└───────────────────────────────────
def Fn体当たり(引数_対象セット): #① 対象オブジェクト一覧のセット
    #┬
    #○自機の存在を確認する
    if not DS.obj.自機: return
    #│＼（存在しない場合）
    #│ ↓
    #│ ▼処理を中断する
    #│
    #◎└┐自機を体当たりする
    for 自機 in DS.obj.自機:
        #│＼（すべて自機を照会し終えた場合）
        #│ ↓
        #│ ▼繰り返し処理を終える
        #│
        #◎└┐対象に体当たりする
        for tmp対象一覧 in 引数_対象セット:
            #│＼（すべての対象を照会し終えた場合）
            #│ ↓
            #│ ▼繰り返し処理を終える
            #│
            #●アイテムに体当たりする
            if P判定_体当たり(自機, tmp対象一覧): break
            #│＼（自機が破壊された場合）
            #│ ↓
            #│ ▼次の自機を操作する
    #┴　┴　┴