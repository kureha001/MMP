#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃コントローラ：描画：描画プロセス
#┠─────────────────────────────────────
#┃各オブジェクトのアクション・メソッドを実行する
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
import  pyxel
from    main.データセット import データセット as DS

#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃メイン
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
class 本体:
    #┌───────────────────────────────────
    #│初期化
    #└───────────────────────────────────
    def __init__(self):
        pass

	#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
    #│プロセス実行
	#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
    def 実行(self):
        #┬
        #○画面をクリアする
        pyxel.cls(0)
        #│
        #●描画アクションを実行する
        if len(DS.obj.選手) > 0:
            for 各選手 in DS.obj.選手:各選手.FN描画.実行()

        DS.obj.シーン[ DS.情報.シーン].FN描画.実行()
        #│
        #△┐ゲーム情報（得点／難易度）を描画する
        if len(DS.obj.選手) > 0:
        #　├┐（秒単位のフレームで、BGMが再生中の場合）
            #↓
            #○得点をオブジェクトから用意する
            命中回数1 = DS.obj.選手[0].情報.命中回数 * 100
            命中回数2 = DS.obj.選手[1].情報.命中回数 * 100
            #┴
        else:
        #　└┐（その他）
            #↓
            #○得点を初期値で用意する
            命中回数1 = 0
            命中回数2 = 0
            #┴
        #│
        #〇ゲーム情報（得点）を描画する
        pyxel.text( 35, 2, str(命中回数1).zfill(4), 7)
        pyxel.text(129, 2, str(命中回数2).zfill(4), 7)
        #┴