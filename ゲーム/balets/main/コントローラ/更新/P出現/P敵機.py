#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃コントローラ：更新：出現プロセス：アクション（敵機：通常敵）
#┠─────────────────────────────────────
#┃敵機オブジェクトのアクション・メソッドで通常敵を出現させる。
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
import  pyxel
import  random
from    main.データセット               import データセット as DS
from    main.オブジェクト.キャラ.敵機   import 敵機生成,敵機出現DB

#┌───────────────────────────────────
#│アクション・メソッド実行
#└───────────────────────────────────
def Pアクション_敵機():
    #┬
    #○出現タイミングを確認する
    変動間隔 = max(60 - DS.情報.難易度 * 5, 25)
    if DS.情報.プレイ時間 % 変動間隔 != 0: return
    #│＼（出現時間が未到来の場合）
    #│ ↓
    #│ ▼処理を中断する
    #│
    #○難易度に応じた敵機をリストアップする
    DB = 敵機出現DB
    難易度 = DS.情報.難易度
    #│
    #〇難易度に該当する出現候補を抽出
    候補リスト = [出現 for 範囲, 出現 in DB if 範囲[0] <= 難易度 <= 範囲[1]]
    if not 候補リスト:
    #　 ＼（難易度に該当するレコードが見つからない場合）
        #↓
        #〇デフォルトの一覧を使用する
        候補リスト = [出現 for 範囲, 出現 in DB if 範囲[0] <= 0 <= 範囲[1]]
        #┴
    #│
    #〇抽出結果を確認する
    if not 候補リスト: return
    #　 ＼（データが一切ない場合）
    #　　↓
    #　　▼処理を中断する
    #│
    #〇重み付きで敵機を1体選出する
    出現候補    = 候補リスト[0]
    種類ID一覧 = [item[0] for item in 出現候補]
    重み一覧   = [item[1] for item in 出現候補]
    種類ID     = random.choices(種類ID一覧, weights=重み一覧, k=1)[0]
    #│
    #≫アクション・メソッドで敵機を生成する
    画面幅   = DS.仕様.基本.画面幅
    キャラ幅 = DS.仕様.キャラ幅.通常
    X座標    = pyxel.rndi(0, 画面幅 - キャラ幅)
    Y座標    = キャラ幅 * -2
    敵機生成(X座標, Y座標, 種類ID, False)
    #┴