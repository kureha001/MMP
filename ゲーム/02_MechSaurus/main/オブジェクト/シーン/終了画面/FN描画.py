#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃シーン：終了画面(描画機能)
#┠─────────────────────────────────────
#┃描画コントローラが描画プロセスで実行するアクション・メソッド
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
import pyxel
import main.GAME共通                         as 共通処理
from   main.データセット import データセット as DS

#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃情報
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
class 情報クラス:

    #□開始時間  ：終了画面を持続するカウンタ
    動作フラグ = False

#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃メイン：終了画面(描画機能)
#┠─────────────────────────────────────
#┃描画コントローラが描画プロセスで実行するアクション・メソッド
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
class 描画クラス:
    #┌───────────────────────────────────
    #│初期化
    #└───────────────────────────────────
    def __init__(self   ,
            引数_個体   ):  #① 個体オブジェクト
      #┬
      #〇個体オブジェクトのリファレンスを用意する
      self._仕様  = 引数_個体.仕様
      #│
      #〇個体オブジェクトのリファレンスを用意する
      self.情報  = 情報クラス()
      #┴
    #┌───────────────────────────────────
    #│機能実行
    #└───────────────────────────────────
    def 実行(self):
      #┬
      #〇画面を描画する
      描画文字 = "- TIME UP -"
      pyxel.text(40, 79, 描画文字, 5)
      pyxel.text(39, 78, 描画文字, pyxel.frame_count % 16)

      救出数1 = DS.obj.運搬機[0].情報.救出数
      救出数2 = DS.obj.運搬機[1].情報.救出数

      if pyxel.frame_count % 15 != 0: return

      #△┐ゲーム情報（得点／難易度）を描画する
      if 救出数1 > 救出数2:
      #　├┐（秒単位のフレームで、BGMが再生中の場合）
        #↓
        if self.情報.動作フラグ:
          共通処理.入出力.MMP.PWM_VALUE(
            self._仕様.サーボ番号[0]  ,
            self._仕様.中央値[0] - 10 )
          self.情報.動作フラグ = False
          return 
        else:
          #○得点をオブジェクトから用意する
          移動量 = -65
          self.情報.動作フラグ = True 
        #┴
      elif 救出数1 < 救出数2:
      #　├┐（秒単位のフレームで、BGMが再生中の場合）
        #↓
        if self.情報.動作フラグ:
          共通処理.入出力.MMP.PWM_VALUE(
            self._仕様.サーボ番号[1]  ,
            self._仕様.中央値[1] + 10 )
          self.情報.動作フラグ = False 
          return 
        else:
          #○得点をオブジェクトから用意する
          移動量 = 65
          self.情報.動作フラグ = True 
      else:
        移動量 = 0

      for 番号 in range(2):
        共通処理.入出力.MMP.PWM_VALUE(
          self._仕様.サーボ番号[番号]       ,
          (self._仕様.中央値[番号] + 移動量 )
          )
      #┴