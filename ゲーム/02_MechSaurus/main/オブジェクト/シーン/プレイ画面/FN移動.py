#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃シーン：プレイ画面(移動機能)
#┠─────────────────────────────────────
#┃更新コントローラが移動プロセスで実行するアクション・メソッド
#┃・下位にデータセット･クラス(仕様｜情報)を持つ
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
import time
import main.GAME共通                         as 共通処理
from   main.データセット import データセット as DS
from   ..DB              import シーンID

#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃データセット：情報
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
class 情報クラス:

    #□開始時間  ：ボス警告を持続するカウンタ
    開始時間    = None

#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃メイン
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
class 移動クラス:
    #┌───────────────────────────────────
    #│初期化
    #└───────────────────────────────────
    def __init__(self   ,
            引数_個体   ):  #① 個体オブジェクト
        #┬
        #○個体オブジェクトのリファレンスを用意する
        self._仕様  = 引数_個体.仕様
        #│
        #≫データセットを用意する
        self.情報 = 情報クラス()
        #┴

    #┌───────────────────────────────────
    #│機能実行
    #└───────────────────────────────────
    def 実行(self):
        #┬
        #○プレイ時間をカウントダウンする
        if DS.情報.プレイ時間 > 0: DS.情報.プレイ時間 -= 1
        if DS.情報.プレイ時間 > 0: return
        #│＼（まだ時間がある場合）
        #│ ↓
        #│ ▼処理を中断する
        #│
        #●発電機(モータと電飾)を停止する
        共通処理.運搬機.停止()
        #│
        #◎└┐サーボを初期化する
        for チーム in range(2):
            #│＼（すべてのチームを走査し終えた場合）
            #│ ↓
            #│ ▼繰り返し処理を抜ける
            #│
            #○サーボ(小屋の恐竜)を初期化する
            共通処理.入出力.MMP.PWM_VALUE(
                self._仕様.首[チーム]   ,
                self._仕様.中央         )
            #│
            #○サーボ(小屋の骨メータ)を初期化する
            共通処理.入出力.MMP.PWM_VALUE(
                self._仕様.骨[チーム]   ,
                self._仕様.最大         )
            #┴
        #│
        #○タイマーをリセットする
        self.情報.開始時間 = None
        #│
        #○恐竜の鳴き声を鳴らす
        共通処理.BGM_DFP.指定曲(2)
        time.sleep(2)
        共通処理.BGM_DFP.指定曲(2)
        time.sleep(2)
        #│
        #○シーンを『終了画面』に進行する
        DS.情報.シーン = シーンID.終了画面
        #│
        #●BGMを切り替える
        共通処理.BGM_DFP.自動選択()
        #┴