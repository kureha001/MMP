#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃結果機能(表現プロセス)のアクションメソッドを実行
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
import pyxel
from   main.データセット import データセット as DS

#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃データセット：仕様
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
class 仕様:
    pass

#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃データセット：情報
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
class 情報:
    pass

#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃メイン
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
class 本体:
    #┌───────────────────────────────────
    #│初期化
    #└───────────────────────────────────
    def __init__(self, 引数_上位): #① 上位のコンポジットクラス
        #┬
        #○データセット(コンポジット)のリファレンスを用意する
        self._仕様 = 引数_上位.仕様
        self._情報 = 引数_上位.情報
        #│
        #≫データセットを用意する
        self.仕様  = 仕様()
        self.情報  = 情報()
        #┴

    #┌───────────────────────────────────
    #│プロセスを実行
    #└───────────────────────────────────
    def 実行(self):
        #┬
        #○画面をクリアする
        pyxel.cls(0)
        #│
        #●キャラクタ別で表現する
        self.Fnキャラクタ別()
        #│
        #●シーン別で表現する
        DS.obj.シーン[DS.情報.シーン].FN表現.実行()
        #│
        #●機能横断の表現
        self.Fn機能横断()
        #┴

	#────────────────────────────────────
    # キャラクタ別で表現
	#────────────────────────────────────
    def Fnキャラクタ別(self):
        #┬
        #○コンテナを確認する
        if DS.obj.選手 is None: return
        #│＼（選手コンテナが空の場合）
        #│ ↓
        #│ ▼処理を中断する
        #│
        #○選手で表現する
        DS.obj.選手.FN表現.実行()
        #┴

    #┌───────────────────────────────────
    #│機能横断の表現
    #└───────────────────────────────────
    def Fn機能横断(self):
        #┬
        #●プレイ時間を表示する
        self.Fnプレイ時間()
        #│
        #●得点を表示する
        self.Fn得点()
        #┴

	#────────────────────────────────────
    # プレイ時間を表示
	#────────────────────────────────────
    def Fnプレイ時間(self):
        self.Fnプレイ時間_立体()
        self.Fnプレイ時間_画面()
	#────────────────────────────────────
    def Fnプレイ時間_立体(self):
        pass
	#────────────────────────────────────
    def Fnプレイ時間_画面(self):
        #┬
        #○残り時間を表示する
        出力 = DS.情報.プレイ時間
        pyxel.text(84,2, f"{str(出力).zfill(4)}", 10)
        #┴

	#────────────────────────────────────
    # 得点を表示
	#────────────────────────────────────
    def Fn得点(self):
        pass
	#────────────────────────────────────
    def Fn得点_立体(self, チームNo):
        pass
	#────────────────────────────────────
    def Fn得点_画面(self, チームNo):
        pass
