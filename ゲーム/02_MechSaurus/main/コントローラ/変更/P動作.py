#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃変更機能→動作プロセスのアクションメソッド
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
from main.データセット        import データセット as DS
from main.オブジェクト.シーン import DB

#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃メイン
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
class 本体:
    #┌───────────────────────────────────
    #│プロセス実行
    #└───────────────────────────────────
    def 実行(self):
        #┬
        #●キャラクタの動作を変更する
        self.Fnオブジェクトの動作()
        #│
        #●シーンの状態を変更する
        DS.obj.シーン[DS.情報.シーン].FN動作.実行()
        #┴ 
#┌───────────────────────────────────
#│アクション・メソッド実行
#└───────────────────────────────────
    def Fnオブジェクトの動作(self):
        #┬
        #○シーンを確認する
        if DS.情報.シーン != DB.シーンID.プレイ画面: return
        #│＼（シーンがプレイ画面以外の場合）
        #│ ↓
        #│ ▼処理を中断する
        #│
        #◎└┐キャラクタ(発電機・運搬機)を動作する
        for チームNo in range(2):
            #│＼（すべてのチームを走査した場合）
            #│ ↓
            #│ ▼繰り返し処理を抜ける
            #│
            #○オブジェクトをリファレンスを用意する
            発電機 = DS.obj.発電機[チームNo]
            運搬機 = DS.obj.運搬機[チームNo]
            #│
            #≫発電機を動作する
            発電機.FN動作.実行()
            #│
            #◇┐運搬機を動作する
            if DS.情報.プレイ時間 % 30 == 0:
            #　├┐（プレイ時間が電力供給タイミングの場合）
                #↓
                #○運搬機に電力を送電する
                電力 = 発電機.情報.蓄電量
                電力 = int(電力 / DS.情報.人数)
                発電機.情報.蓄電量    = 0
                運搬機.情報.入力電力 += 電力
                #│
                #≫運搬機を動作する
                運搬機.FN動作.実行()
                #┴
            #　│
            if DS.情報.プレイ時間 % 4 == 0:
            #　├┐（プレイ時間が動作タイミングの場合）
                #↓
                #≫運搬機を動作する
                運搬機.FN動作.実行()
                #┴
            #　└┐（その他）
        #┴　┴　┴