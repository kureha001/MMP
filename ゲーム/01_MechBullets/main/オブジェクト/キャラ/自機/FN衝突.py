#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃キャラクタ：自機(衝突プロセス)
#┠─────────────────────────────────────
#┃更新コントローラが衝突プロセスで実行するアクション・メソッド
#┃※特殊効果(防御)が発動している場合はダメージを緩和する
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
import main.共通部品 as 共通部品
from   main.データセット               import データセット as DS
from   main.オブジェクト.管理.特殊効果 import 効果ID
from   main.オブジェクト.演出.爆発     import 爆発生成

#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃メイン
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
class 本体:
    #┌───────────────────────────────────
    #│初期化
    #└───────────────────────────────────
    def __init__(self, 引数_上位): #① 上位のコンポジットクラス
        #┬
        #○データセット(コンポジット)のリファレンスを用意する
        self._上位 = 引数_上位
        self._仕様 = 引数_上位.仕様
        self._情報 = 引数_上位.情報
        #│
        #○外部オブジェクトのリファレンスを用意する
        self.共仕   = DS.obj.自機共通.仕様
        self.共情   = DS.obj.自機共通.情報
        self.特情   = DS.obj.特殊効果.情報
        #┴

    #┌───────────────────────────────────
    #│機能実行
    #├───────────────────────────────────
    #│※特殊効果(防御)が発動している場合はダメージを緩和する
    #└───────────────────────────────────
    def 実行(self           ,
            argダメージ = 0 ):  #① 受けるダメージ   ※0：強制破壊
        #┬
        #◇┐シールドにダメージを与える
        if argダメージ == 0:
        #　├┐（強制破壊の指定がある場合）
            #↓
            #○シールドを空にする
            self.共情.シールド = 0
            #┴
        else:
        #　└┐（その他）
            #↓
            #●特殊効果から、ダメージ倍率を求める
            発動中 = self.特情.発動中
            キー   = 効果ID.防御
            ダメージ倍率 = (発動中[キー][1]) if キー in 発動中 else (1)
            #│
            #○シールドにダメージを与える
            ダメージ量 = argダメージ * ダメージ倍率
            self.共情.シールド -= ダメージ量
            #│
            #○シールド残量を補正する
            self.共情.シールド = min(self.共情.シールド, self.共仕.シールド総量 )
            self.共情.シールド = max(self.共情.シールド, 0                      )
            #│
            #≫爆発を生成する
            d = DS.仕様.キャラ幅.通常 // 2
            x = self._情報.X + d
            y = self._情報.Y + d
            爆発生成(x, y, 6)
            #┴
        #│
        if self.共情.シールド > 0: 共通部品.効果音.爆発(1)
