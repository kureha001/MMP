#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃変更機能(動作プロセス)のアクションメソッド
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
# [システム共通]
import pyxel

# [ゲーム共通]
from main.データセット import DS

#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃仕様
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
class 仕様クラス:
    def __init__(self       ,
            引数_発射角度   ,   #① 発射する方向(角度)
            引数_移動速度   ):  #② 移動速度(XYベクトル)

        self.速度X = pyxel.cos(引数_発射角度) * 引数_移動速度
        self.速度Y = pyxel.sin(引数_発射角度) * 引数_移動速度
        
#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃メイン
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
class 本体:
    #┌───────────────────────────────────
    #│初期化
    #└───────────────────────────────────
    def __init__(self       ,
            引数_上位       ,	#① 個体オブジェクト
            引数_発射角度   ,	#② 発射する方向(角度)
            引数_移動速度   ):	#③ 移動速度(XYベクトル)
        #┬
        #○データセット(コンポジット)のリファレンスを用意する
        self._上位 = 引数_上位
        self._仕様 = 引数_上位.仕様
        self._情報 = 引数_上位.情報
        #│
        #≫データセットを用意する
        self.仕様   = 仕様クラス(引数_発射角度, 引数_移動速度)
        #┴

    #┌───────────────────────────────────
    #│機能実行
    #└───────────────────────────────────
    def 実行(self):
        #┬
        #●前進(下方に移動)する
        self.Fn移動()
        #│
        #●場外は消滅する
        self.Fn場外()
        #┴
	#────────────────────────────────────
    def Fn移動(self):
        #┬
        #○座標を更新する
        self._情報.X += self.仕様.速度X
        self._情報.Y += self.仕様.速度Y
        #┴
	#────────────────────────────────────
    def Fn場外(self):
        #┬
        #●座標を確認する
        キャラ幅 = DS.仕様.リソース.キャラ幅.通常
        画面仕様 = DS.仕様.リソース.画面
        画面幅   = 画面仕様.幅
        画面高   = 画面仕様.高
        確認X    = ((self._情報.X > -キャラ幅) and (self._情報.X < 画面幅))
        確認Y    = ((self._情報.Y > -キャラ幅) and (self._情報.Y < 画面高))
        if 確認X and 確認Y: return
        #│＼（画面内の場合）
        #│ ↓
        #│ ▼処理を中断する
        #│
        #○この個体を削除する
        self._仕様.格納先.remove(self._上位)
        #┴