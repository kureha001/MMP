#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃キャラクタ：弾
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
from main.データセット  import データセット as DS
from .FN動作           import 本体 as 動作機能の生成
from .FN衝突           import 本体 as 衝突機能の生成
from .FN表現           import 本体 as 表現機能の生成

#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃データセット：仕様
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
class 仕様:
    def __init__(self       ,
            引数_所有者ID   ,   #① 弾の所有者
            引数_威力       ,   #② 威力
            引数_貫通弾区分 ):  #③ 貫通弾/通常弾の区分
        #--------------------------------------------------------------------
        # 識別
        #--------------------------------------------------------------------
        #□ 種類ID       ：他処理で参照するのでダミーで用意しておく
        #□ 所有者ID     ：自機/敵機を格納
        self.種類ID     = None
        self.所有者ID   = 引数_所有者ID
        chk自機         = (self.所有者ID == DS.仕様.所有者ID.自機)

        #--------------------------------------------------------------------
        # 属性区分
        #--------------------------------------------------------------------
        #□ 貫通区分     ：貫通弾(True)/通常弾(False)で区分
        #□ アイテム区分 ：衝突プロセスで参照する為、ダミーで用意
        #□ ボス区分     ：衝突プロセスで参照する為、ダミーで用意
        self.貫通弾区分   = 引数_貫通弾区分
        self.アイテム区分 = False
        self.ボス区分     = False

        #--------------------------------------------------------------------
        # 格納先
        #--------------------------------------------------------------------
        #□格納先        ： オブジェクトの格納先(リスト)
        self.格納先     = (DS.obj.弾_自機) if chk自機 else (DS.obj.弾_敵機)

        #--------------------------------------------------------------------
        # 攻守情報
        #--------------------------------------------------------------------
        self.威力       = 引数_威力
        self.衝突範囲   = (2,1,5,6) if chk自機 else (2,2,5,5)

#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃データセット：情報
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
class 情報:
    def __init__(self   ,
            引数_X座標  ,   #① 存在位置(X座標)
            引数_Y座標  ):  #② 存在位置(Y座標)
        #--------------------------------------------------------------------
        # 位置
        #--------------------------------------------------------------------
        #□ 画面位置(X座標)
        #□ 画面位置(Y座標)
        self.X          = 引数_X座標
        self.Y          = 引数_Y座標

        #--------------------------------------------------------------------
        # 残量
        #--------------------------------------------------------------------
        #□ シールド
        self.シールド   = 0

#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃メイン
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
class 本体:
    def __init__(self       ,
            引数_所有者ID   ,   #① 自機/敵機を区分するID
            引数_X座標      ,	#② 存在位置(X座標)
            引数_Y座標      ,	#③ 存在位置(Y座標)
            引数_発射角度   ,   #④ 発射する方向(角度)
            引数_移動速度   ,   #⑤ 移動速度(XYベクトル)
            引数_威力       ,   #⑥ 威力
            引数_貫通弾区分 ):  #⑦ 貫通弾/通常弾の区分
        #┬
        #≫データセットを用意する
        self.仕様   = 仕様(引数_所有者ID, 引数_威力, 引数_貫通弾区分)
        self.情報   = 情報(引数_X座標, 引数_Y座標)
        #│
        #≫処理セットを用意する
        self.FN動作 = 動作機能の生成(self, 引数_発射角度, 引数_移動速度)
        self.FN衝突 = 衝突機能の生成(self)
        self.FN表現 = 表現機能の生成(self)
        #│
        #○用意済みのインスタンスに生成する
        self.仕様.格納先.append(self)
        #┴