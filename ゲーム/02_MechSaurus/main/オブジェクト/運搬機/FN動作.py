#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃変更機能(動作プロセス)のアクションメソッド
#┣━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃運搬機の動力に電力を供給し駆動する
#┃・電力はＰＷＭ値で指定
#┃・最低出力の場合に動力を停止 ※DCモータ保護の為
#┃・高出力の場合、ボーナス点を取得
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
import sys; sys.path.append('..'); import 共通.MMP

#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃データセット：仕様
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
class 仕様:
    pass

#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃データセット：情報
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
class 情報:
    pass

#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃メイン
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
class 本体:
    #┌───────────────────────────────────
    #│初期化
    #└───────────────────────────────────
    def __init__(self, 引数_上位): #① 上位のコンポジットクラス
        #┬
        #○データセット(コンポジット)のリファレンスを用意する
        self._仕様 = 引数_上位.仕様
        self._情報 = 引数_上位.情報
        #│
        #≫データセットを用意する
        self.仕様  = 仕様()
        self.情報  = 情報()
        #┴

    #┌───────────────────────────────────
    #│プロセス機能を実行
    #└───────────────────────────────────
    def 実行(self):
        #┬
        #○出力電力を求める
        最低出力 = self._仕様.最低出力
        最高出力 = self._仕様.最高出力
        変換効率 = self._仕様.変換効率
        出力電力 = min((最低出力 + self._情報.入力電力 * 変換効率), 最高出力)
         #│
        #○出力電力を確定する
        self._情報.出力電力 = 出力電力
        if 出力電力 == 最低出力: 出力電力 = -1
        #　 ＼（出力電力が『最低出力』の場合）
            #↓
            #○実際に出力する電力を『停止レベル』に補正する
            #┴
        #│
        #●動力に電力を供給する
        共通.MMP.接続.PWM_VALUE(self._仕様.動力No, 出力電力)
        #│
        #○入力電力を減衰する（惰性を表現）
        self._情報.入力電力 = int(self._情報.入力電力 * 0.9)
