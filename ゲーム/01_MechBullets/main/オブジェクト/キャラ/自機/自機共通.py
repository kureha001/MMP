#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃キャラクタ：自機：共用
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
# [ゲーム共通]
from main.データセット import DS

#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃データセット：仕様
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
class 仕様クラス:
    def __init__(self):
        #--------------------------------------------------------------------
        # 移動プロセス用
        #--------------------------------------------------------------------
        #□ 移動速度
        self.移動速度       = 1.5

        #--------------------------------------------------------------------
        # 発射プロセス用
        #--------------------------------------------------------------------
        #□ 発射間隔         ： 発射の間隔時間(単位:fps)
        #□ 補充間隔         ： 弾補充の間隔時間(単位:fps)
        #□ 積載量           ： 弾を装備できる最大数
        self.発射間隔       = 5
        self.補充間隔       = 12
        self.積載量         = 25

        #--------------------------------------------------------------------
        # 衝突プロセス用
        #--------------------------------------------------------------------
        #□ 衝突範囲         ： 衝突判定する範囲(ゆとり1ドット)
        #□ シールド総量     ： シールドを蓄えられる最大量
        #□ 威力_弾          ： 弾での攻撃で相手見与えるダメージ量
        #□ 威力_体当たり    ： 体当たりで相手見与えるダメージ量
        #□ 爆発オフセット   ： 体当たりで相手見与えるダメージ量
        self.衝突範囲       = ( 1,1, 6,6 )
        self.シールド総量   = DS.仕様.画面幅
        self.威力_弾        = 2
        self.威力_体当たり  = 3
        self.爆発オフセット = 0

#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃データセット：情報
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
class 情報クラス:
    def __init__(self,
            引数_仕様): #① 仕様
        #--------------------------------------------------------------------
        # 資材残量
        #--------------------------------------------------------------------
        #□ シールド     ： シールドの残量
        #□ 弾倉         ： 弾の残量
        self.シールド       = 引数_仕様.シールド総量 * 0.5
        self.弾数           = 0

#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃メイン
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
class 本体:
    def __init__(self):
        #┬
        #≫データセットを用意する
        self.仕様   = 仕様クラス()
        self.情報   = 情報クラス(self.仕様)
        #┴