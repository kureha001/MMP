#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃発電機オブジェクト
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
import pyxel
from   main.データセット import データセット as DS
from   .FN動作           import 本体         as 動作機能の生成
from   .FN表現           import 本体         as 表現機能の生成

#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃データセット：仕様
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
class 仕様:
    #┌───────────────────────────────────
    #│初期化
    #└───────────────────────────────────
    def __init__(self       ,
            引数_チーム番号 ,  #① チーム番号
            引数_ペダル一覧 ): #② ペダル一覧(PWMポート番号)

        #□ チーム番号（0,1）
        self.チーム番号 = 引数_チーム番号

        #□ ペダル情報リスト
        self.ポート = 引数_ペダル一覧
        print("--------------------")
        print("[発電機]")
        print(" PORT :",self.ポート)

#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃データセット：情報
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
class 情報:
    #┌───────────────────────────────────
    #│初期化
    #└───────────────────────────────────
    def __init__(self):

        #□発電によって蓄えた電力
        self.蓄電量 = 0

        #□発電ローターの位相(角度)
        self.角度   = pyxel.rndi(0,360)

#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃メイン
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
class 本体:
    #┌───────────────────────────────────
    #│初期化
    #└───────────────────────────────────
    def __init__(self       ,
            引数_チーム番号 ,  #① チーム番号
            引数_ペダル一覧 ): #② ペダル一覧(PWMポート番号)
        #┬
        #≫データセットを用意する
        self.仕様   = 仕様(引数_チーム番号, 引数_ペダル一覧)
        self.情報   = 情報()
        #│
        #≫プロセス機能を用意する
        self.FN動作 = 動作機能の生成(self)
        self.FN表現 = 表現機能の生成(self)
        #│
        #≫コンテナに生成する
        DS.obj.発電機.insert(0,self)
        #┴