#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃結果機能→表現プロセスのアクションメソッド
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
import pyxel
from   main.データセット import データセット as DS
import main.GAME共通                         as 共通処理

#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃メイン
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
class 表現クラス:
    #┌───────────────────────────────────
    #│初期化
    #└───────────────────────────────────
    def __init__(self   ,
            引数_個体   ):   #① 個体オブジェクト
        #┬
        #○個体オブジェクトのリファレンスを用意する
        self._情報  = 引数_個体.情報
        #┴
    #┌───────────────────────────────────
    #│機能実行
    #└───────────────────────────────────
    def 実行(self):
        #┬
        #●選手の姿勢を表現する
        self.Fn姿勢()
        #┴

    #┌───────────────────────────────────
    #│選手の姿勢
    #└───────────────────────────────────
    def Fn姿勢(self):
        #┬
        #●立体物で表現する
        self.Fn姿勢_立体()
        #│
        #●画面で表現する
        self.Fn姿勢_画面()
        #┴
	#────────────────────────────────────
    def Fn姿勢_立体(self):
        #┬
        #○ハード仕様のリファレンスを用意する
        最大 = DS.ハード.モータ最大
        最小 = DS.ハード.モータ最小
        #│
        #●立体物で選手の姿勢(脚)を表現する
        PWM_No = DS.ハード.PWM_Ch_屈伸
        PWM値  = (最大) if self._情報.姿勢 == 1 else (最小)
        共通処理.入出力.MMP.PWM_VALUE(PWM_No, PWM値)
        #│
        #●立体物で選手の姿勢(両手)を表現する
        PWM_No = DS.ハード.PWM_Ch_着地
        PWM値  = (最小) if self._情報.姿勢 == 2 else (最大)
        共通処理.入出力.MMP.PWM_VALUE(PWM_No, PWM値)
        #┴
	#────────────────────────────────────
    def Fn姿勢_画面(self):
        #┬
        #○画面で選手の姿勢を表現する
        if self._情報.姿勢 == 1: pyxel.blt(60,20, 0, 24,0, 39,119, 0)
        else                   : pyxel.blt(80,20, 0,  0,0, 23,119, 0)
        #┴
