#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃キャラクタ：弾(移動機能)
#┠─────────────────────────────────────
#┃更新コントローラが移動プロセスで実行するアクション・メソッド
#┃・下位にデータセット･クラス(仕様)を持つ
#┃※画面外に移動した際、オブジェクトを削除する
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
import  pyxel
from    main.データセット import データセット as DS

#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃仕様
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
class 仕様クラス:
    def __init__(self       ,
            引数_発射角度   ,   #① 発射する方向(角度)
            引数_移動速度   ):  #② 移動速度(XYベクトル)

        self.速度X = pyxel.cos(引数_発射角度) * 引数_移動速度
        self.速度Y = pyxel.sin(引数_発射角度) * 引数_移動速度
        
#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃メイン
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
class 移動クラス:
    #┌───────────────────────────────────
    #│初期化
    #└───────────────────────────────────
    def __init__(self       ,
            引数_個体       ,	#① 個体オブジェクト
            引数_発射角度   ,	#② 発射する方向(角度)
            引数_移動速度   ):	#③ 移動速度(XYベクトル)
        #┬
        #〇個体オブジェクトのリファレンスを用意する
        self._個体  = 引数_個体
        self._仕様  = 引数_個体.仕様
        self._情報  = 引数_個体.情報
        #│
        #≫データセットを用意する
        self.仕様   = 仕様クラス(引数_発射角度, 引数_移動速度)
        #┴

    #┌───────────────────────────────────
    #│機能実行
    #└───────────────────────────────────
    def 実行(self):
        #┬
        #●前進(下方に移動)する
        self.Fn移動()
        #│
        #●場外は消滅する
        self.Fn場外()
        #┴
	#────────────────────────────────────
    def Fn移動(self):
        #┬
        #○座標を更新する
        self._情報.X += self.仕様.速度X
        self._情報.Y += self.仕様.速度Y
        #┴
	#────────────────────────────────────
    def Fn場外(self):
        #┬
        #●座標を確認する
        キャラ幅 = DS.仕様.キャラ幅.通常
        画面幅   = DS.仕様.画面幅
        画面高   = DS.仕様.画面高
        確認X    = ((self._情報.X > -キャラ幅) and (self._情報.X < 画面幅))
        確認Y    = ((self._情報.Y > -キャラ幅) and (self._情報.Y < 画面高))
        if 確認X and 確認Y: return
        #│＼（画面内の場合）
        #│ ↓
        #│ ▼処理を中断する
        #│
        #○この個体を削除する
        self._仕様.格納先.remove(self._個体)
        #┴