#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃汎用部品：入力
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
from .                 import MMP
from main.データセット import データセット as DS

#────────────────────────────────────
class 情報:
    状態  = [   # Chごとの状態：ON(True)/OFF(False) 
        False,  # ポート0用 [Ch0]
        False,  # ポート1用 [Ch0]
        False,  # ポート2用 [Ch0]
        False,  # ポート3用 [Ch0]
        False,  # ポート4用 [Ch0]
        False,  # ポート5用 [Ch0]
        False,  # ポート6用 [Ch0]
        False,  # ポート7用 [Ch0]
        False]  # ポート8用 [Ch0]

#────────────────────────────────────
def 入力走査(引数_ポートNo):
    #┬
    #○結果を初期化する
    概要 = [ False, False ] # ONしている，OFFした直後
    測定 = 0                # 測定値(1:ON/-1:OFFになった/0:通常のOFF) 
    #│
    #○ポートのアナログ値を用意する
    ポートNo = 引数_ポートNo
    入力値   = MMP.接続.mmpAnaVal[ポートNo]
    #│
    #◇┐入力状況を走査する
    if 入力値[0] < DS.仕様.ハード設定.スイッチ閾値:
    #　├┐（状態が『ON』の場合）
        #↓
        #○状態を『ONしている』にする
        #○概要(ON)を『YES』にする
        #○測定を『ON』にする
        情報.状態[ポートNo] = True
        概要[0] = True
        測定    = 1
        #┴
    elif 情報.状態[ポートNo]:
    #　├┐（前回の状態が『ON』の場合）
        #↓
        #○状態を『OFF』にする
        #○概要(OFF)を『YES』にする
        #○測定を『OFFした直後』にする
        情報.状態[ポートNo] = False
        概要[1] = True
        測定    = -1
        #┴
    #　└┐（その他）
        #┴
    #│
    #▼結果を返す
    return (概要,測定)