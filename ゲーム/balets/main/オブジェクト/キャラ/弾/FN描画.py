#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃キャラクタ：弾(描画機能)
#┠─────────────────────────────────────
#┃描画コントローラが描画プロセスで実行するアクション・メソッド
#┃・下位にデータセット･クラス(仕様)を持つ
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
import  pyxel
from    main.データセット import データセット as DS

#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃仕様
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
class 仕様クラス:
    def __init__(self   ,
            引数_仕様   ):  #① 所有者を識別するID
        #--------------------------------------------------------------------
        # イメージバング
        #--------------------------------------------------------------------
        #□ 画像     ：イメージバンクの切り出し条件
        キャラ幅    = DS.仕様.キャラ幅.通常
        x           = キャラ幅 * ((1) if 引数_仕様.貫通弾区分 else (0))
        chk自機     = (引数_仕様.所有者ID == DS.仕様.所有者ID.自機)
        y           = (DS.仕様.画像Y.自弾) if chk自機 else (DS.仕様.画像Y.敵弾)
        self.画像   = (0, x,y, キャラ幅,キャラ幅, 0)

#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃メイン
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
class 描画クラス:
    #┌───────────────────────────────────
    #│初期化
    #└───────────────────────────────────
    def __init__(self   ,
            引数_個体   ): #① 個体オブジェクト
        #┬
        #〇個体オブジェクトのリファレンスを用意する
        self._仕様  = 引数_個体.仕様
        self._情報  = 引数_個体.情報
        #│
        #≫データセットを用意する
        self.仕様   = 仕様クラス(self._仕様)
        #┴

    #┌───────────────────────────────────
    #│機能実行
    #└───────────────────────────────────
    def 実行(self):
        #┬
        #〇描画する
        pyxel.blt(self._情報.X, self._情報.Y, *self.仕様.画像 )
        #┴